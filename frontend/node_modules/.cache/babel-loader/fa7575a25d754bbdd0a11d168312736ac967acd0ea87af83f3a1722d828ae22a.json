{"ast":null,"code":"import { createApp } from 'vue';\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:5000',\n  // Update with your backend API URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const store = createStore({\n  state: {},\n  mutations: {},\n  actions: {\n    register(context, userData) {\n      apiClient.post('/register', userData).then(response => {\n        console.log(response.data);\n        // Handle success, e.g., show success message or redirect\n      }).catch(error => {\n        console.error(error.response.data);\n        // Handle error, e.g., show error message\n      });\n    },\n\n    login(context, userData) {\n      apiClient.post('/login', userData).then(response => {\n        console.log(response.data);\n        // Handle success, e.g., store token in localStorage or redirect\n      }).catch(error => {\n        console.error(error.response.data);\n        // Handle error, e.g., show error message\n      });\n    }\n  },\n\n  modules: {}\n});","map":{"version":3,"names":["createApp","createStore","axios","apiClient","create","baseURL","headers","store","state","mutations","actions","register","context","userData","post","then","response","console","log","data","catch","error","login","modules"],"sources":["C:/Users/piter/Desktop/Projekt/Frontend-App/frontend/src/store/index.js"],"sourcesContent":["import { createApp } from 'vue'\nimport { createStore } from 'vuex'\nimport axios from 'axios'\n\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:5000', // Update with your backend API URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport const store = createStore({\n  state: {},\n  mutations: {},\n  actions: {\n    register(context, userData) {\n      apiClient.post('/register', userData)\n        .then(response => {\n          console.log(response.data);\n          // Handle success, e.g., show success message or redirect\n        })\n        .catch(error => {\n          console.error(error.response.data);\n          // Handle error, e.g., show error message\n        });\n    },\n    login(context, userData) {\n      apiClient.post('/login', userData)\n        .then(response => {\n          console.log(response.data);\n          // Handle success, e.g., store token in localStorage or redirect\n        })\n        .catch(error => {\n          console.error(error.response.data);\n          // Handle error, e.g., show error message\n        });\n    }\n  },\n  modules: {}\n})"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,KAAK,GAAGN,WAAW,CAAC;EAC/BO,KAAK,EAAE,CAAC,CAAC;EACTC,SAAS,EAAE,CAAC,CAAC;EACbC,OAAO,EAAE;IACPC,QAAQA,CAACC,OAAO,EAAEC,QAAQ,EAAE;MAC1BV,SAAS,CAACW,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC,CAClCE,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAACL,QAAQ,CAACG,IAAI,CAAC;QAClC;MACF,CAAC,CAAC;IACN,CAAC;;IACDG,KAAKA,CAACV,OAAO,EAAEC,QAAQ,EAAE;MACvBV,SAAS,CAACW,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC,CAC/BE,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAACL,QAAQ,CAACG,IAAI,CAAC;QAClC;MACF,CAAC,CAAC;IACN;EACF,CAAC;;EACDI,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}