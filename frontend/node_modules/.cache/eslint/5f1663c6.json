[{"C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\main.js":"1","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\App.vue":"2","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\router\\index.js":"3","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\store\\index.js":"4","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\views\\Register.vue":"5","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\views\\Login.vue":"6"},{"size":222,"mtime":1684353115555,"results":"7","hashOfConfig":"8"},{"size":237,"mtime":1684353173708,"results":"9","hashOfConfig":"8"},{"size":442,"mtime":1684353157741,"results":"10","hashOfConfig":"8"},{"size":1087,"mtime":1684353166190,"results":"11","hashOfConfig":"8"},{"size":985,"mtime":1684353142989,"results":"12","hashOfConfig":"8"},{"size":709,"mtime":1684353150092,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l0suot",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\main.js",[],"C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\App.vue",[],"C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\router\\index.js",[],"C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\store\\index.js",["29","30"],"import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:5000', // Update with your backend API URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default new Vuex.Store({\n  state: {},\n  mutations: {},\n  actions: {\n    register({ commit }, userData) {\n      apiClient.post('/register', userData)\n        .then(response => {\n          console.log(response.data);\n          // Handle success, e.g., show success message or redirect\n        })\n        .catch(error => {\n          console.error(error.response.data);\n          // Handle error, e.g., show error message\n        });\n    },\n    login({ commit }, userData) {\n      apiClient.post('/login', userData)\n        .then(response => {\n          console.log(response.data);\n          // Handle success, e.g., store token in localStorage or redirect\n        })\n        .catch(error => {\n          console.error(error.response.data);\n          // Handle error, e.g., show error message\n        });\n    }\n  },\n  modules: {}\n})","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\views\\Register.vue",["31"],"<template>\r\n  <div>\r\n    <h2>Register</h2>\r\n    <form @submit.prevent=\"register\">\r\n      <div>\r\n        <label for=\"username\">Username:</label>\r\n        <input type=\"text\" v-model=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"role\">Role:</label>\r\n        <select v-model=\"role\">\r\n          <option value=\"user\">User</option>\r\n          <option value=\"admin\">Admin</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      role: 'user'\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.$store.dispatch('register', {\r\n        username: this.username,\r\n        password: this.password,\r\n        role: this.role\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>","C:\\Users\\piter\\Desktop\\Projekt\\Frontend-App\\frontend\\src\\views\\Login.vue",["32"],"<template>\r\n  <div>\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div>\r\n        <label for=\"username\">Username:</label>\r\n        <input type=\"text\" v-model=\"username\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$store.dispatch('login', {\r\n        username: this.username,\r\n        password: this.password\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>",{"ruleId":"33","severity":2,"message":"34","line":18,"column":16,"nodeType":"35","messageId":"36","endLine":18,"endColumn":22},{"ruleId":"33","severity":2,"message":"34","line":29,"column":13,"nodeType":"35","messageId":"36","endLine":29,"endColumn":19},{"ruleId":"37","severity":2,"message":"38","line":1,"column":1,"nodeType":null,"messageId":"39"},{"ruleId":"37","severity":2,"message":"40","line":1,"column":1,"nodeType":null,"messageId":"39"},"no-unused-vars","'commit' is defined but never used.","Identifier","unusedVar","vue/multi-word-component-names","Component name \"Register\" should always be multi-word.","unexpected","Component name \"Login\" should always be multi-word."]